{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"","text":"<p>La materia Programaci\u00f3n, Redes y Sistemas Inform\u00e1ticos est\u00e1 dise\u00f1ada para dotar al alumnado de las capacidades necesarias para comprender y desenvolverse en la sociedad digital del siglo XXI. Su enfoque ser\u00e1 eminentemente pr\u00e1ctico y busca la movilizaci\u00f3n de saberes cient\u00edfico-tecnol\u00f3gicos a trav\u00e9s de la resoluci\u00f3n de problemas y el trabajo en equipo.</p>"},{"location":"index.html#estructura-de-la-asignatura","title":"Estructura de la Asignatura","text":"<p>El curr\u00edculo se organiza en tres bloques de saberes b\u00e1sicos, que constituyen los pilares fundamentales de la inform\u00e1tica actual.</p> <ul> <li>\ud83d\udcbb Programaci\u00f3n: Se abordar\u00e1 la resoluci\u00f3n de problemas mediante el desarrollo de software, aplicando el pensamiento computacional. El alumnado aprender\u00e1 a analizar, dise\u00f1ar, codificar y validar aplicaciones inform\u00e1ticas.</li> <li>\u2699\ufe0f Sistemas Inform\u00e1ticos: Este bloque se centra en el dise\u00f1o, montaje, configuraci\u00f3n y administraci\u00f3n de sistemas inform\u00e1ticos, tanto en sus componentes f\u00edsicos (hardware) como l\u00f3gicos (software), promoviendo un uso seguro y sostenible.</li> <li>\ud83c\udf10 Redes: Incluye los saberes relativos al dise\u00f1o, configuraci\u00f3n y administraci\u00f3n de redes inform\u00e1ticas para permitir la conexi\u00f3n y comunicaci\u00f3n segura entre dispositivos.</li> </ul>"},{"location":"index.html#metodologia","title":"Metodolog\u00eda","text":"<p>La metodolog\u00eda ser\u00e1 activa y pr\u00e1ctica, basada en el desarrollo de proyectos y la resoluci\u00f3n de retos. Se plantear\u00e1n situaciones de aprendizaje que conecten con la realidad del alumnado y los desaf\u00edos actuales. El objetivo es que los conocimientos adquiridos sean significativos y aplicables, facilitando la incorporaci\u00f3n a la educaci\u00f3n superior y a la vida activa con responsabilidad y aptitud.</p>"},{"location":"index.html#sistema-de-evaluacion","title":"Sistema de Evaluaci\u00f3n","text":"<p>La evaluaci\u00f3n ser\u00e1 continua, formativa y transparente, con un car\u00e1cter tanto cuantitativo como cualitativo.</p> <ul> <li>Ponderaci\u00f3n: Las competencias espec\u00edficas de la asignatura tendr\u00e1n una distribuci\u00f3n de pesos equitativa, al considerarse todas de igual relevancia para la formaci\u00f3n integral del alumnado.</li> <li>Evaluaci\u00f3n por Actividades: La calificaci\u00f3n se basar\u00e1 en las actividades, tareas y proyectos desarrollados. Previo a su realizaci\u00f3n, se proporcionar\u00e1 al alumnado la r\u00fabrica o lista de cotejo (checklist) con los criterios de evaluaci\u00f3n espec\u00edficos.</li> <li>Cuestionarios en L\u00ednea: Al finalizar cada unidad de trabajo (denominada sprint, con una duraci\u00f3n aproximada de dos semanas), se realizar\u00e1 un cuestionario en l\u00ednea para evaluar la asimilaci\u00f3n de los contenidos te\u00f3ricos. Se dispondr\u00e1 de tres intentos para su superaci\u00f3n.</li> <li>Pruebas de Autor\u00eda: De forma complementaria, se contempla la posibilidad de realizar pruebas escritas para verificar la correcta asimilaci\u00f3n de los conocimientos y la autor\u00eda de los trabajos presentados.</li> </ul>"},{"location":"M1/m1f1.html","title":"Sprint1. Del Dato al Modelo","text":""},{"location":"M1/m1f1.html#1-la-era-exponencial","title":"1. La era exponencial","text":"<p>La inteligencia artificial (IA) se ha consolidado como una fuerza transformadora a nivel mundial, redefiniendo la sociedad, la econom\u00eda y las relaciones geopol\u00edticas. Su impacto es comparable al de revoluciones tecnol\u00f3gicas anteriores como la m\u00e1quina de vapor o la electricidad, y est\u00e1 reconfigurando el panorama global a una velocidad sin precedentes.</p> <p>De hecho, la IA se ha convertido en la fuerza motriz que est\u00e1 convirtiendo el progreso tecnol\u00f3gico en una curva exponencial, donde los avances se suceden a un ritmo cada vez m\u00e1s vertiginoso, dando lugar a lo que se conoce como era exponencial.</p> <p>La idea de la era exponencial<sup>1</sup> se basa en que el ritmo del cambio tecnol\u00f3gico se acelera exponencialmente porque cada nueva generaci\u00f3n de tecnolog\u00eda se construye sobre las capacidades de la anterior, haci\u00e9ndola m\u00e1s poderosa y eficiente para crear la siguiente. La IA es el ejemplo m\u00e1s claro, ya que es una tecnolog\u00eda que se utiliza para mejorar y acelerar su propio desarrollo.</p> <p>Hitos hist\u00f3ricos correspondientes a los avances m\u00e1s significativos de la Historia</p> <p>A continuaci\u00f3n se presentan algunos hitos hist\u00f3ricos que ilustran c\u00f3mo los avances m\u00e1s significativos en la historia de la humanidad han ido acortando progresivamente el tiempo necesario para alcanzar el siguiente gran logro. Esta aceleraci\u00f3n evidencia el concepto de progreso exponencial: de millones de a\u00f1os entre innovaciones en la prehistoria, hemos pasado a milenios, siglos, d\u00e9cadas e incluso menos tiempo en la actualidad.</p> <ul> <li> <p>~2.5 millones de a\u00f1os atr\u00e1s: Primeras herramientas de piedra (Industria Olduvayense). Inicio de la tecnolog\u00eda rudimentaria.     Tiempo desde el hito anterior: N/A (punto de partida).</p> </li> <li> <p>~10,000 a.C. (hace ~12,000 a\u00f1os): Revoluci\u00f3n Neol\u00edtica. Domesticaci\u00f3n de plantas y animales, inicio de la agricultura y los asentamientos permanentes.     Tiempo desde el hito anterior: ~2.49 millones de a\u00f1os.</p> </li> <li> <p>~3,500 a.C. (hace ~5,500 a\u00f1os): Invenci\u00f3n de la escritura (Sumeria). Permite registrar y transmitir conocimiento de forma compleja.     Tiempo desde el hito anterior: ~6,500 a\u00f1os.</p> </li> <li> <p>~1440 d.C. (hace ~585 a\u00f1os): Imprenta de tipos m\u00f3viles (Gutenberg). Revoluciona la difusi\u00f3n del conocimiento.     Tiempo desde el hito anterior: ~4,940 a\u00f1os.</p> </li> <li> <p>~1760 d.C. (hace ~265 a\u00f1os): Primera Revoluci\u00f3n Industrial. Uso de la m\u00e1quina de vapor y mecanizaci\u00f3n de la producci\u00f3n.     Tiempo desde el hito anterior: ~320 a\u00f1os.</p> </li> <li> <p>~1903 d.C. (hace ~122 a\u00f1os): Primer vuelo controlado y sostenido (Hermanos Wright). Inicio de la era de la aviaci\u00f3n.     Tiempo desde el hito anterior: ~143 a\u00f1os.</p> </li> <li> <p>~1945 d.C. (hace ~80 a\u00f1os): Desarrollo de la energ\u00eda at\u00f3mica y aparici\u00f3n de los primeros computadores electr\u00f3nicos programables (ENIAC). Inicio de la era digital y nuclear.     Tiempo desde el hito anterior: ~42 a\u00f1os.</p> </li> <li> <p>~1969 d.C. (hace ~56 a\u00f1os): Llegada del ser humano a la Luna y creaci\u00f3n de ARPANET, precursora de Internet.     Tiempo desde el hito anterior: ~24 a\u00f1os.</p> </li> <li> <p>~1991 d.C. (hace ~34 a\u00f1os): La World Wide Web se hace accesible al p\u00fablico. Internet transforma la comunicaci\u00f3n y el acceso a la informaci\u00f3n.     Tiempo desde el hito anterior: ~22 a\u00f1os.</p> </li> <li> <p>~2007 d.C. (hace ~18 a\u00f1os): Lanzamiento del primer iPhone. Popularizaci\u00f3n masiva de los smartphones y el internet m\u00f3vil.     Tiempo desde el hito anterior: ~16 a\u00f1os.</p> </li> <li> <p>~2012 d.C. - Presente (hace ~13 a\u00f1os - actualidad): Revoluci\u00f3n de la Inteligencia Artificial. Avances exponenciales en machine learning y deep learning que impactan m\u00faltiples campos.     Tiempo desde el hito anterior: Solo ~5 a\u00f1os despu\u00e9s del auge de los smartphones, y sigue aceler\u00e1ndose.</p> </li> </ul> <p>Como se observa, el intervalo entre grandes revoluciones tecnol\u00f3gicas y sociales se ha reducido de manera espectacular, reflejando la aceleraci\u00f3n del progreso en la era exponencial.</p> <p>La IA representa un cambio de paradigma porque transforma lo que significa ser humano en una sociedad tecnol\u00f3gica: ya no se trata solo de hacer m\u00e1s r\u00e1pido o con menos esfuerzo, sino de colaborar con m\u00e1quinas que piensan y aprenden, llevando la creatividad, la eficiencia y los retos sociales y \u00e9ticos a un nuevo nivel.</p> <p>AE101(CE1) Relevancia de la IA en la actualidad</p> <p>A partir de la siguiente ponencia de Nuria Oliver, experta en IA y directora de la fundaci\u00f3n Ellis, responde a las siguientes cuestiones:</p> <ol> <li>\u00bfC\u00f3mo define la ponente la Inteligencia Artificial y cu\u00e1l es su principal limitaci\u00f3n inherente seg\u00fan esta definici\u00f3n?</li> <li>Explica la diferencia fundamental entre la Inteligencia Artificial espec\u00edfica y la Inteligencia Artificial general (AGI). \u00bfSe considera que necesitamos alcanzar la AGI para que la IA tenga un impacto significativo en la sociedad?</li> <li>Describe brevemente las dos grandes escuelas de pensamiento que han existido hist\u00f3ricamente en el campo de la Inteligencia Artificial. \u00bfCu\u00e1l de ellas predomina en la actualidad y por qu\u00e9?</li> <li>\u00bfQu\u00e9 paralelismo establece la ponente entre la electricidad y la Inteligencia Artificial en el contexto de las revoluciones industriales? Menciona al menos dos similitudes.</li> <li>\u00bfCu\u00e1les son los tres factores principales que han impulsado el desarrollo exponencial de las t\u00e9cnicas de Inteligencia Artificial basadas en el aprendizaje a partir de datos desde 2012-2013?</li> <li>Describe brevemente el concepto de redes neuronales profundas y su importancia en la revoluci\u00f3n actual de la Inteligencia Artificial. Menciona alg\u00fan ejemplo de su aplicaci\u00f3n exitosa.</li> <li>\u00bfQu\u00e9 significa el t\u00e9rmino \"Inteligencia Artificial generativa\" y cu\u00e1l es un ejemplo del impacto sin precedentes que ha tenido en comparaci\u00f3n con otros servicios digitales?</li> <li>Menciona al menos tres \u00e1mbitos de la vida cotidiana o de la sociedad en los que la Inteligencia Artificial tiene una presencia cada vez mayor.</li> </ol>"},{"location":"M1/m1f1.html#2-los-ordenadores-piensan","title":"2. \u00bfLos ordenadores piensan?","text":"<p>En las secciones anteriores se ha mencionado que la IA es una tecnolog\u00eda que permite a las m\u00e1quinas imitar funciones cognitivas humanas como el aprendizaje y la resoluci\u00f3n de problemas. Pero, \u00bfrealmente los ordenadores piensan? Hagamos un breve repaso hist\u00f3rico.</p> <p>La Prueba de Turin es un experimento concebido por Alan Touring en 1950, que buscaba responder a la pregunta: \u00bfPuede pensar una m\u00e1quina?. En esencia la prueba consiste en que un evaluador humano interact\u00faa con dos entidades, una m\u00e1quina y un humano, a trav\u00e9s de un terminal de ordenador. Si el evaluador no puede distinguir entre la m\u00e1quina y el humano, entonces la m\u00e1quina se considera que piensa.</p> <p>La prueba de Turing no se centra en c\u00f3mo la m\u00e1quina piensa, sino en su capacidad para comportarse de manera indistinguible de un humano.</p> <p>Esto significa que la m\u00e1quina no necesita tener conciencia o comprensi\u00f3n real, sino simplemente la capacidad de generar respuestas convincentes.</p> <p>Logic Theorist, concebido en 1956 se considera como el primer programa de IA y su objetivo era demostrar teoremas de l\u00f3gica simb\u00f3lia de manera autom\u00e1tica. Logic Theorist utilizaba un enfoque de b\u00fasqueda heur\u00edstica para resolver problemas de l\u00f3gica proposicional. El programa generaba posibles soluciones a un problema y luego las evaluaba utilizando un conjunto de heur\u00edsticas para determinar su viabilidad.</p> <p>El Logic Theorist fue capaz de demostrar 38 de los primeros 52 teoremas en \"Principia Mathematica\".</p> <p>Este programa fue pionero en demostrar que las computadoras pod\u00edan no solo realizar c\u00e1lculos matem\u00e1ticos, sino tambi\u00e9n emular aspectos del pensamiento humano.</p> <p>Frank Rosenblatt (1928\u20131971) fue un psic\u00f3logo estadounidense ampliamente reconocido como uno de los pioneros del Deep Learning. Su principal contribuci\u00f3n fue el desarrollo del Perceptr\u00f3n, un modelo de clasificaci\u00f3n binaria basado en un discriminador lineal. Este modelo realiza predicciones combinando un algoritmo con los pesos asignados a las entradas, marcando un hito en el campo de las redes neuronales artificiales.</p> <p></p> <p>En 1967 se desarroll\u00f3 el Perceptr\u00f3n Mark 1, el primer sistema de red neuronal dise\u00f1ado para aprender mediante prueba y error. Este sistema estaba espec\u00edficamente orientado a la clasificaci\u00f3n de im\u00e1genes de 20x20 p\u00edxeles. Aunque inicialmente el Perceptr\u00f3n gener\u00f3 grandes expectativas en el \u00e1mbito acad\u00e9mico, pronto se descubri\u00f3 que ten\u00eda limitaciones significativas, ya que no pod\u00eda ser entrenado para reconocer patrones m\u00e1s complejos. Esto llev\u00f3 a un estancamiento en el desarrollo de las redes neuronales durante varios a\u00f1os.</p> <p>El Perceptr\u00f3n Mark 1 contaba con una \u00fanica capa, lo que lo hac\u00eda apto \u00fanicamente para aprender datos que pudieran ser separados linealmente. Las pruebas realizadas con este sistema se centraron en entrenarlo para diferenciar entre im\u00e1genes de hombres y mujeres. Para ello, se introdujeron cientos de fotograf\u00edas de hombres y mujeres con diferentes estilos de cabello y maquillaje durante el proceso de entrenamiento. Una vez completado el entrenamiento, se evalu\u00f3 su desempe\u00f1o utilizando im\u00e1genes de rostros que no hab\u00eda visto previamente. El sistema logr\u00f3 clasificar con \u00e9xito si una imagen correspond\u00eda a un hombre o a una mujer con una alta tasa de acierto.</p> <p>En el siguiente v\u00eddeo de la \u00e9poca se detalla el proceso: Perceptron Mark 1.</p> <p>En 1997 IBM desarroll\u00f3 Deep Blue, un superordenador capaz de jugar al ajedrez a un nivel de competici\u00f3n. Deep Blue fue el primer sistema de IA en derrotar a un campe\u00f3n mundial de ajedrez, Garry Kasparov, en una partida oficial. La victoria de Deep Blue marc\u00f3 un hito en la historia de la IA y demostr\u00f3 que las m\u00e1quinas pod\u00edan superar a los humanos en tareas cognitivas complejas.</p> <p>Deep Blue guardaba en su memoria millones de partidas disputadas desde el siglo XVI, cuando uno de los mejores ajedrecistas era el cura espa\u00f1ol Ruy L\u00f3pez de Segura. Sobre esa base de datos, el programa pod\u00eda calcular hasta 200 millones de jugadas... cada segundo.</p> <p>Su \u00e9xito se bas\u00f3 en gran medida en la \"fuerza bruta\", es decir, su capacidad para calcular millones de movimientos posibles por segundo (Deep BLue vs Kasparov - BBC News).</p> <p>En 2011, otro sistema de IA de IBM, Watson, gan\u00f3 el concurso de televisi\u00f3n estadounidense Jeopardy!, en el que los concursantes deb\u00edan responder preguntas en forma de enunciado. Watson fue capaz de interpretar las preguntas en lenguaje natural y generar respuestas precisas en tiempo real. Su victoria en Jeopardy! demostr\u00f3 que las m\u00e1quinas pod\u00edan comprender y procesar el lenguaje humano de manera efectiva (Watson and the Jeopardy! Challenge - IBM Research).</p> <p>En 2015, Baidu (el google Chino), crea la supercomputadora Minwa, obtiene un nuevo r\u00e9cord en reconocimiento de im\u00e1genes superando la anterior marca de Google. Su procesamiento se basa en el concepto establecido hace d\u00e9cadas con el Perceptr\u00f3n de Frank Rosenblatt, pero con una red de neuronas mucho m\u00e1s extensa y organizada en m\u00faltiples capas jer\u00e1rquicas (Deep Learning - Aprendizaje Profundo).</p> <p>La supercomputadora utiliz\u00f3 1,5 millones de im\u00e1genes etiquetadas en 1.000 categor\u00edas diferentes para entrenar sus sistemas. Esta base de datos se emplea para preparar a las m\u00e1quinas para el reto, que consiste en clasificar 10.000 im\u00e1genes que el ordenador no ha visto antes (Web ImageNet. Desafio de clasificaci\u00f3n.).</p> <p>Una de las claves del \u00e9xito de la supercomputadora fue una t\u00e9cnica de software, que modific\u00f3 1,2 millones de las im\u00e1genes del entrenamiento, distorsion\u00e1ndolas, volte\u00e1ndolas o tocando el colorido, de manera que se convirtieron en 2.000 millones. Esto le permiti\u00f3 contar con una base de datos m\u00e1s variada</p> <p>En 2016, AlphaGo, un programa de IA desarrollado por DeepMind (una empresa de Google), derrot\u00f3 al campe\u00f3n mundial de Go, Lee Sedol, en una serie de partidas. El juego de Go es un juego de estrategia extremadamente complejo que ha sido considerado durante mucho tiempo como un desaf\u00edo para la IA debido a su alta complejidad y al gran n\u00famero de posibles movimientos.</p> <p>AlphaGo combina el Deep Learning con el aprendizaje por refuerzo. El aprendizaje por refuerzo es una t\u00e9cnica en el que un agente (programa) interact\u00faa con un entorno, y recibe recompensas por acciones correctas y penalizaciones por acciones incorrectas, lo que le permite aprender a maximizar las recompensas a lo largo del tiempo. Hay que entender las recompesas como un valor num\u00e9rico que gu\u00eda al agente en la toma de decisiones. Por ejemplo, en  programa que juega ajedrez recibe una recompensa alta al capturar la reina del oponente y una recompensa a\u00fan mayor al dar jaque mate.</p> <p>AlphaGo fue entrenado utilizando una combinaci\u00f3n de datos de partidas de Go de jugadores humanos y partidas simuladas por el propio programa. Durante el entrenamiento, AlphaGo jug\u00f3 millones de partidas contra s\u00ed mismo, lo que le permiti\u00f3 mejorar su capacidad de anticipaci\u00f3n y toma de decisiones. La victoria de AlphaGo sobre Lee Sedol fue un hito significativo en el desarrollo de la IA y demostr\u00f3 que las m\u00e1quinas pod\u00edan superar a los humanos en tareas cognitivas complejas (Alpha Go - Google DeepMind).</p> <p>En 2017 se presenta AlphaGo Zero. A diferencia de las versi\u00f3n anterior de AlphaGo, AlphaGo Zero aprendi\u00f3 a jugar al Go \u00fanicamente a partir de las reglas del juego, no necesit\u00f3 estudiar partidas humanas (aprendizaje supervisado).</p> <p>Tras entrenarse jugando contra s\u00ed mismo, en tan solo 3 d\u00edas,los resultados fueron sorprendentes, AlphaGo Zero super\u00f3 con creces el nivel de juego de los mejores jugadores humanos y barri\u00f3 a la vesi\u00f3n predecesora, que hab\u00eda vencido al campe\u00f3n Lee Sedol. (Un AphaGo invencible - El Pa\u00eds).</p>"},{"location":"M1/m1f1.html#3-definicion-de-ia","title":"3. Definici\u00f3n de IA","text":"<p>La inteligencia artificial es la t\u00e9cnica de la programaci\u00f3n para que una computadora responda a los datos de ma misma manera que un ser inteligente hace, o en el mejor de los casos, simular c\u00f3mo un ser inteligente reacciona, procesa y comprende datos.</p> <p>B\u00e1sicamente la IA persigue que el ordenador cuando vea una foto de un gato, en vez de ver una serie de pixels, vea un gato.</p> <p></p> <p>Normalmente un programa consta de un conjunto de reglas (instrucciones), expresadas en un lenguaje de programacion, que el computador sigue para realizar una tarea o resolver un problema.</p> <p>Consideremos el juego del tres en raya. Si quisieramos hacer un programa para jugar a este juego, tendr\u00edamos que encontrar la formar para expresar las reglas de juego en un lenguaje de programaci\u00f3n. Tendriamos reglas del tipo:</p> <ul> <li>Si eres el primero en jugar, pon en el centro.</li> <li>Si el oponente ha jugado en una esquina, juega en el centro.</li> <li>Si el oponente ha jugado en el centro, juega en una esquina.</li> <li>Si el oponente tiene dos fichas en una l\u00ednea, juega en la tercera casilla.</li> <li>...</li> </ul> <p>Hay muchas reglas, incluso para un juego tan simple como el tres en raya.</p> <p>Sin embargo, la mayor\u00eda de nosotros no jugamos al tres en raya siguiendo reglas, jugamos y aprendemos las reglas y las estrategias por experiencia.</p> <p>Esta es la primera clave para crear aplicaciones que act\u00faen como seres inteligentes: hay que entrenarlo de la misma manera que entrenas a un ser humano para hacer algo.</p> <p></p> <p></p> <p>Es muy similar a la programaci\u00f3n inform\u00e1tica tradicional, pero es simplemente una forma diferente de pensar en ello. Este nuevo paradigma se llama aprendizaje autom\u00e1tico, y se vuelve tremendamente poderoso cuando se usa para resolver problemas donde es imposible descubrir las reglas. Por ejemplo, \u00bfpodr\u00edas saber la edad de una persona simplemente mirando la retina de su ojo? <sup>1</sup> Quiz\u00e1s un oftalm\u00f3logo podr\u00eda detectar ciertas enfermedades, pero no la edad de la persona. Incluso, si pudieras, \u00bfc\u00f3mo lo expresar\u00edas en reglas?</p>"},{"location":"M1/m1f1.html#4-la-importancia-de-los-datos","title":"4. La importancia de los datos","text":"<p>Entonces, con muchos datos, podr\u00edamos hacer una comparaci\u00f3n de patrones, para encontrar la respuesta a un problema. Con este m\u00e9todo podemos llegar de combinaci\u00f3n de datos y respuestas se puede llegar mucho m\u00e1s lejos que lo que un humano podr\u00eda llegar.</p> <p>Esto es por ejemplo lo que hizo Google, creando un software que detectaba enfermedades y estimaba la edad de una persona a partir de una imagen de su retina, con unos m\u00e1rgenes de error muy bajos Google Research \u00bfPuedes obtener el tama\u00f1o del datasheet que utilizaron?</p> <p>Como intuimos, se deben necesitar muchos datos para poder entrenar el modelo de IA. Pero, \u00bfsirve cualquier conjunto de datos?</p> <p>Si ponemos como ejemplo la siguiente imagen, y pidieramos que reconocieras el zapato, no tendriamos ning\u00fan problema, pero si te pido que me digas \u00bfc\u00f3mo lo has hecho? \u00bfQu\u00e9 caracter\u00edsticas has tenido en cuenta? \u00bfC\u00f3mo has llegado a la conclusi\u00f3n de que es un zapato? tendr\u00edas problema en responder, ya que en tu mente, tienes la experiencia y simplemente sabes que lo es. </p> <p>Como vemos es complicado idear un conjunto de reglas para que una computadora pueda reconocer un zapato, pero si le damos un conjunto de datos con im\u00e1genes de zapatos, la computadora podr\u00e1 aprender a reconocerlos.</p> <p>Con la siguiente imagen, podriamos pensar que tendriamos bastante claro lo que es un zapato../a</p> <p></p> <p>\u00bfPero qu\u00e9 pasa si le damos una imagen como la siguiente? Posiblemente no lo reconocer\u00eda como un zapato.</p> <p></p> <p>Este problema es lo que se conoce como Overfitting o sobreajuste, que es cuando el modelo de IA se ajusta demasiado a los datos de entrenamiento y no puede generalizar a nuevos datos. Si entrenas un modelo con solo zapatos de monta\u00f1a, solo reconocera como zapatos, los de monta\u00f1a. Podriamos decir que estamos introduciendo un sesgo en el modelo.</p> <p>Podemos concluir, podr\u00edamos decir que un modelo ser\u00e1 tan inteligente como los datos utilizados para entrenarlos.</p> <p>En resumen, los datos necesarios para entrenar un modelo de IA son fundamentales, tanto en cantidad como en amplitud para asegurarse de tener ejemplos de los casos que se quieran cubrir.</p> <p>AE102(CE5) El algoritmo \u00bfes justo?</p> <p>El objetivo de esta actividad es reflexionar si las m\u00e1quina \"piensan\" y si las decisiones que toman son siempre justas.</p> <ol> <li>\u00bfCreeis que una m\u00e1quina que supere el Test de Turing puede considerarse que \"piensa\" como un humano? \u00bfPor qu\u00e9?</li> <li>\u00bfHemos hablado de la importancia de los datos para entrenar un modelo de IA? \u00bfQu\u00e9 problemas pueden surgir si los datos no son representativos o tienen sesgos? En el siguiente art\u00edculo BBC se expone una IA que penalizaba los curr\u00edculums de las mujeres, \u00bfpor qu\u00e9 cre\u00e9is que la IA aprendi\u00f3 a hacer eso? \u00bfde qui\u00e9n es la culpa?</li> <li>Buscad otro ejemplo, real o inventado, donde un algoritmo podr\u00eda tomar una decisi\u00f3n injusta por culpa de los datos con los que fue entrenado.</li> <li>\u00bfDe qu\u00e9 manera puede la IA a ayudar a crear una sociedad m\u00e1s justa e igualitaria?</li> <li>\u00bfY de qu\u00e9 manera puede aumentar las desigualdades si no se dise\u00f1a con cuidado?</li> </ol>"},{"location":"M1/m1f1.html#recursos","title":"Recursos","text":"<ul> <li>La era de la IA - FrontLine PBS</li> </ul> <ol> <li> <p>Developing an aging clock using deep learning on retinal images - Google Research \u21a9\u21a9</p> </li> </ol>"},{"location":"M1/m1f2.html","title":"Sprint2. Creaci\u00f3n de modelos","text":"<p>En el sprint anterior hemos visto los conceptos b\u00e1sicos de Machine Learning. En este segundo sprint vamos a ver c\u00f3mo crear nuestros propios modelos de Machine Learning utilizando herramientas accesibles y gratuitas.</p>"},{"location":"M1/m1f2.html#sesion-1-perceptron-y-google-colab","title":"Sesi\u00f3n 1. Perceptr\u00f3n y Google Colab","text":"<p>El aprendizaje autom\u00e1tico, conocido en ingl\u00e9s como Machine Learning (ML), es un subcampo de la inteligencia artificial que se centra en el desarrollo de algoritmos y modelos que permiten a las m\u00e1quinas aprender de los datos y realizar predicciones o tomar decisiones sin ser programadas expl\u00edcitamente para cada tarea. Podr\u00edamos considerar qu\u00e9 es un nuevo paradigma de programaci\u00f3n, en el que en lugar de escribir c\u00f3digo para resolver un problema, se entrena un modelo con datos relevantes para que aprenda a resolverlo.</p> <p>Dentro del Machine Learning, podr\u00edamos distinguir tres paradigmas principales de aprendizaje:</p> <ol> <li> <p>Aprendizaje supervisado: En este paradigma, el modelo se entrena con un conjunto de datos etiquetados, es decir, cada entrada tiene una salida correspondiente conocida. El objetivo es que el modelo aprenda a mapear las entradas a las salidas correctas. Por ejemplo, un modelo de clasificaci\u00f3n de im\u00e1genes que aprende a identificar diferentes tipos de objetos en fotos etiquetadas.</p> </li> <li> <p>Aprendizaje no supervisado: En este caso, el modelo se entrena con datos no etiquetados y debe encontrar patrones o estructuras subyacentes en los datos por s\u00ed mismo. Un ejemplo com\u00fan es el clustering, donde el modelo agrupa datos similares sin conocer las categor\u00edas de antemano.  Las plataformas de comercio electr\u00f3nico utilizan esta t\u00e9cnica para ver tus h\u00e1bitos de navegaci\u00f3n y compra, agrup\u00e1ndote con otros usuarios que comparten intereses similares. Esto ayuda a crear una experiencia de compra personalizada, mostr\u00e1ndote productos que coincidan con lo que te gusta, sin que nadie le diga al sistema en qu\u00e9 categor\u00edas caes.</p> </li> <li> <p>Aprendizaje por refuerzo: Aqu\u00ed, el modelo aprende a tomar decisiones mediante la interacci\u00f3n con un entorno. Recibe recompensas o castigos en funci\u00f3n de sus acciones y ajusta su comportamiento para maximizar las recompensas a lo largo del tiempo. Este paradigma es com\u00fan en juegos y rob\u00f3tica. Ejemplos de aprendizaje por refuerzo incluyen; juegos de estrategia como StarCraft o ajedrez, donde los jugadores de IA aprenden a trav\u00e9s de la experiencia y la retroalimentaci\u00f3n.Y veh\u00edculos aut\u00f3nomos que aprenden a navegar en entornos complejos mediante la interacci\u00f3n con el entorno y la retroalimentaci\u00f3n recibida.</p> </li> </ol>"},{"location":"M1/m1f2.html#11-que-son-las-redes-neuronales","title":"1.1 \u00bfQu\u00e9 son las redes neuronales?","text":"<p>Las redes neuronales son un conjunto de algoritmos inspirados en la estructura y funcionamiento del cerebro humano, dise\u00f1ados para reconocer patrones y aprender de los datos. Est\u00e1n compuestas por capas de nodos (o \"neuronas\") qu7e procesan la informaci\u00f3n y transmiten se\u00f1ales a trav\u00e9s de conexiones ponderadas.</p> <p></p> <p>Esquema red neuronal. Fuente IDECOR</p> <p>Las redes neuronales artificiales de m\u00e1s de una capa se conocen como redes neuronales profundas o Deep Learning. Estas redes son capaces de aprender representaciones jer\u00e1rquicas de los datos, lo que las hace especialmente efectivas para tareas complejas como el reconocimiento de im\u00e1genes, el procesamiento del lenguaje natural y la traducci\u00f3n autom\u00e1tica.</p> <p>Podr\u00edamos pensar que la red neuronal es como una red de filtros. Pensando en el reconocimiento de datos, y siguiendo la analogia de la red de filtros, una primera capa detectar\u00eda formas simples (l\u00edneas, colores), la siguiente combinar\u00eda esas formas para detectar patrones m\u00e1s complejos (c\u00edrculos, cuadrados), y las \u00faltimas capas identificar\u00edan un objeto completo (un gato, una persona).</p> <p>Para entender mejor c\u00f3mo funcionan las redes neuronales, es \u00fatil conocer algunos conceptos clave, empeceomos con un perceptr\u00f3n simple.</p>"},{"location":"M1/m1f2.html#12-el-perceptron","title":"1.2 El perceptr\u00f3n","text":"<p>El perceptr\u00f3n no es otra cosa que la red neuronal m\u00e1s simple. Su funci\u00f3n es actuar como un algoritmo de clasificaci\u00f3n binaria, es decir, un sistema que toma una decisi\u00f3n y da una respuesta de \"si\" o \"no\" (representado por 1 o 0).</p> <p></p> <p>Expliquemos inicialmente c\u00f3mo funciona un perceptr\u00f3n con un ejemplo cotidiano. Imaginemos que el Perceptr\u00f3n debe decidir si vamos a la playa o no, bas\u00e1ndose en tres factores:</p> <ul> <li>x1: \u00bfEst\u00e1 soleado? (1 para s\u00ed, 0 para no)</li> <li>x2: \u00bfEs fin de semana? (1 s\u00ed, 0 no)</li> <li>x3: \u00bfTenemos trabajo pendiente? (1 s\u00ed, 0 no)</li> </ul> <p>Cada entrada tiene un peso (w1\u200b,w2\u200b,w3\u200b) que representa su importancia. Por ejemplo, \"hace sol\" (w1\u200b=0.6) puede ser m\u00e1s importante que \"ser fin de semana\" (w2\u200b=0.4). \"Tener trabajo\" ser\u00eda un inhibidor, as\u00ed que tendr\u00eda un peso negativo (w3\u200b=\u22120.8). ElBias (b), tambi\u00e9n conocido como sesgo o umbral, se podr\u00eda entender como la predisposici\u00f3n de la persona a ir a la playa, por ejemplo, si le encanta la playa, el sesgo ser\u00eda un valor muy alto, ya que ir\u00eda a la playa aunque no se den las condiciones ideales. Si es una persona anti-playa*, el bias ser\u00eda un n\u00famero negativo, ya que no ir\u00eda a la playa aunque se den las condiciones ideales.</p> <p>Una vez conocidos los pesos y el sesgo, el Perceptr\u00f3n realiza una suma ponderada de las entradas: \\(z=(x1\u200b\u22c5w1\u200b)+(x2\u200b\u22c5w2\u200b)+(x3\u200b\u22c5w3\u200b)+b\\). Finalmente, una funci\u00f3n de activaci\u00f3n (en el Perceptr\u00f3n simple, ser\u00eda una funci\u00f3n escal\u00f3n), decide si vamos o no a la playa:,</p> <ul> <li>Si \\(z&gt;0\\), entonces la salida es 1 (vamos a la playa).</li> <li>Si \\(z\\leq0\\), entonces la salida es 0 (no vamos a la playa).</li> </ul> <p>Antes de profundizar en el funcionamiento del perceptr\u00f3n, es fundamental conocer una herramienta clave: Google Colab. Esta plataforma resulta especialmente \u00fatil para estudiantes de bachillerato, ya que permite programar en Python, analizar datos y visualizar resultados de manera sencilla. Google Colab es ideal para proyectos educativos y experimentos pr\u00e1cticos, y se utiliza ampliamente en el aprendizaje de Machine Learning. Ofrece acceso gratuito a recursos computacionales avanzados y un entorno colaborativo donde se pueden crear, compartir y ejecutar cuadernos interactivos, lo que facilita y acelera el proceso de aprendizaje y experimentaci\u00f3n en inteligencia artificial.</p> <p>Google Colab: Primeros pasos</p> <ul> <li>Accede a Google Colab.</li> <li>Crea un nuevo cuaderno (notebook).</li> </ul> <p>]</p> <p>Google Colab se basa en Jupyter Notebooks, una herramienta muy popular en la comunidad de ciencia de datos y aprendizaje autom\u00e1tico. Permite escribir y ejecutar c\u00f3digo Python en un entorno interactivo, combinando c\u00f3digo, texto, ecuaciones y visualizaciones en un solo documento.</p> <p>Un cuaderno Jupyter se compone de Celdas que pueden contener c\u00f3digo o texto. </p> <ul> <li> <p>Inserta una celda de texto y escribe como t\u00edtulo <code>## Mi primer cuaderno en Google Colab</code>. En la parte derecha de la celda observas un icono de l\u00e1piz, que indica que la celda est\u00e1 en modo edici\u00f3n. Haz clic en el icono para salir del modo edici\u00f3n y ver el formato aplicado. </p> </li> <li> <p>En el siguiente enlace tienes un tutor\u00edal b\u00e1sico sobre el lenguaje de marcado Markdown, que es el que se utiliza para dar formato al texto en las celdas de texto de los cuadernos Jupyter: Markdown Guide</p> </li> <li> <p>Crea otra celda de texto con un subt\u00edtulo de nivel 3 y haz una enumeraci\u00f3n de los par\u00e1metros del perceptr\u00f3n que hemos visto (entradas, pesos, sesgo, funci\u00f3n de activaci\u00f3n).</p> </li> <li> <p>Inserta una celda de tipo texto y escribe la formula de la suma ponderada del perceptr\u00f3n haciendo uso de la nomenclatura matem\u00e1tica de LaTeX que puedes encontrar en la secci\u00f3n de Ecuaciones del enlace anterior.</p> </li> <li>Nombra tu cuaderno como \"MiPrimerCuaderno.ipynb\". Guardalo en tu Google Drive.</li> <li>A\u00f1ade una celda de c\u00f3digo y copia el siguiente c\u00f3digo para calcular la salida del perceptr\u00f3n en funci\u00f3n de las entradas, pesos y sesgo que hemos visto en el ejemplo de ir a la playa. Ejecuta la celda para ver el resultado.</li> </ul> <p><pre><code>    # Definici\u00f3n de entradas\n    x1 = 1  # Est\u00e1 soleado\n    x2 = 1  # Es fin de semana\n    x3 = 0  # No tenemos trabajo pendiente\n    # Definici\u00f3n de pesos\n    w1 = 0.6  # Peso para \"Est\u00e1 soleado\"\n    w2 = 0.4  # Peso para \"Es fin de semana\"\n    w3 = -0.8 # Peso para \"No tenemos trabajo pendiente\"\n    # Definici\u00f3n del sesgo\n    b = 0.2   # Sesgo\n    # C\u00e1lculo de la suma ponderada\n    z = (x1 * w1) + (x2 * w2) + (x3 * w3) + b\n    # Funci\u00f3n de activaci\u00f3n (funci\u00f3n escal\u00f3n)\n    output = 1 if z &gt; 0 else 0\n    print(\"Salida del perceptr\u00f3n (1: Vamos a la playa, 0: No vamos a la playa):\", output)\n</code></pre> - Guarda el cuaderno en tu Google Drive.</p>"},{"location":"M1/m1f2.html#sesion-2-3-introduccion-a-python","title":"Sesi\u00f3n 2, 3: Introducci\u00f3n a Python.","text":"<p>Python es un lenguaje de programaci\u00f3n muy popular debido a su simplicidad y versatilidad. Es ampliamente utilizado en ciencia de datos, desarrollo web, automatizaci\u00f3n y, por supuesto, en Machine Learning. Algunas de las caracter\u00edsticas que hacen que Python sea ideal para principiantes incluyen:</p> <ul> <li>Sintaxis sencilla: La sintaxis de Python es clara y f\u00e1cil de leer, lo que facilita el aprendizaje para los principiantes.</li> <li>Gran comunidad: Python tiene una comunidad activa que ofrece una gran cantidad de recursos, tutoriales y bibliotecas.</li> <li>Bibliotecas para Machine Learning: Python cuenta con numerosas bibliotecas especializadas en Machine Learning, como TensorFlow, Keras, Scikit-learn y PyTorch, que facilitan la implementaci\u00f3n de modelos complejos.</li> <li>Entornos interactivos: Herramientas como Jupyter Notebooks y Google Colab permiten a los usuarios escribir y ejecutar c\u00f3digo en un entorno interactivo, lo que es ideal para el aprendizaje y la experimentaci\u00f3n.</li> </ul> <p>Primeros pasos con Python en Google Colab</p> <p>Vais a trabajar de forma individual en un cuaderno interactivo de Google Colab llamado \"Introducci\u00f3n a Python\". Este cuaderno contiene explicaciones y 12 peque\u00f1os ejercicios pr\u00e1cticos distribuidos en seis bloques tem\u00e1ticos: operadores, listas, cadenas, condicionales, bucles y funciones.   </p> <ol> <li>Abre un nuevo cuaderno en Google Colab.</li> <li>Crea una celda de texto y escribe el t\u00edtulo <code># Introducci\u00f3n a Python</code>.</li> <li>Vamos a crear una secci\u00f3n de nivel 2 para cada uno de los bloques tem\u00e1ticos. Crea una celda de texto y escribe <code>## Operadores</code>.</li> <li>A continuaci\u00f3n, crea una celda de c\u00f3digo e implementa los ejercicios del bloque de operadores. Puedes consultar el cuaderno de referencia Python basics - Google Colab.</li> <li>Repite el proceso para los otros cinco bloques tem\u00e1ticos: listas, cadenas, condicionales, bucles y funciones.</li> <li>Guarda el cuaderno en tu Google Drive con el nombre \"Introducci\u00f3n a Python.ipynb\".</li> </ol> <p>OPERADORES ARITM\u00c9TICOS</p> <p>Los operadores aritm\u00e9ticos nos permiten realizar c\u00e1lculos matem\u00e1ticos.</p> <ul> <li> <p>Actividad 1 (Operadores): Calculadora de \u00c1rea y Per\u00edmetro.    Crea un programa que calcule el \u00e1rea y el per\u00edmetro de un rect\u00e1ngulo. Define dos variables, base y altura, con los valores que t\u00fa elijas. Luego, muestra los resultados por pantalla con un mensaje claro (ej. \"El \u00e1rea del rect\u00e1ngulo es: X\").</p> </li> <li> <p>Actividad 2 (Operadores): Conversor de Temperatura   Escribe un programa que convierta una temperatura de grados Celsius a Fahrenheit. La f\u00f3rmula es: F=(C\u00d79/5)+32. Asigna un valor a una variable celsius y muestra el resultado en Fahrenheit.</p> </li> </ul> <p>LISTAS</p> <p>Las listas son colecciones ordenadas y modificables de elementos. Se definen con corchetes [] y los elementos se separan por comas.</p> <ul> <li>Actividad 3 (Listas): La Lista de la Compra. Crea una lista llamada lista_compra con tres productos que necesites comprar. A\u00f1ade un cuarto producto al final de la lista. Elimina el segundo producto de la lista. Muestra la lista final por pantalla.</li> <li>Actividad 4 (Listas): Calculadora de Nota Media. Crea una lista con 5 notas num\u00e9ricas (de 0 a 10). Calcula la nota media y mu\u00e9strala por pantalla. Pista: puedes usar las funciones sum() para sumar los elementos y len() para saber cu\u00e1ntos elementos hay.</li> </ul> <p>CADENAS</p> <p>Las cadenas son secuencias de caracteres, como palabras o frases. Se definen con comillas simples ' o dobles \".</p> <ul> <li> <p>Actividad 5: Creador de Saludos. Define dos variables de tipo cadena, una para un nombre y otra para una ciudad. Concat\u00e9nalas para crear una frase que diga \"Hola, [nombre] de [ciudad]. \u00a1Bienvenido/a a Python!\".</p> </li> <li> <p>Actividad 6: Contador de Vocales. Dada una cadena de texto, cuenta cu\u00e1ntas veces aparece la vocal 'a' (may\u00fascula o min\u00fascula). Pista: convierte primero toda la cadena a min\u00fasculas con el m\u00e9todo <code>.lower()</code>. Para contar, puedes usar el m\u00e9todo <code>.count()</code>.</p> </li> </ul> <p>CONDICIONALES</p> <p>Los condicionales (<code>if</code>, <code>elif</code>, <code>else</code>) nos permiten ejecutar un bloque de c\u00f3digo solo si se cumple una determinada condici\u00f3n.</p> <ul> <li>Actividad 7: \u00bfPar o Impar?. Escribe un programa que, dado un n\u00famero, determine si es par o impar. Si el resto de dividir el n\u00famero entre 2 es 0, es par. De lo contrario, es impar. Muestra un mensaje apropiado en cada caso.</li> <li>Actividad 8: Sistema de Calificaci\u00f3n. Crea un programa que, dada una nota num\u00e9rica (de 0 a 10), indique si el alumno ha \"Aprobado\" (si la nota es 5 o superior) o \"Suspendido\" (si es menor de 5).</li> </ul> <p>BUCLES</p> <p>Los bucles nos permiten repetir un bloque de c\u00f3digo varias veces. Los m\u00e1s comunes son el bucle for (para recorrer elementos) y el bucle while (mientras se cumpla una condici\u00f3n).</p> <ul> <li>Actividad 9: La Tabla de Multiplicar. Escribe un programa que muestre la tabla de multiplicar del n\u00famero 7 (del 1 al 10). Usa un bucle <code>for</code> y la funci\u00f3n <code>range()</code>.</li> <li>Actividad 10: Suma de Elementos de una Lista. Dada una lista de n\u00fameros, utiliza un bucle <code>for</code> para sumar todos sus elementos y muestra el total. No utilices la funci\u00f3n <code>sum()</code>.</li> </ul> <p>FUNCIONES</p> <p>Las funciones son bloques de c\u00f3digo reutilizables que realizan una tarea espec\u00edfica. Se definen con <code>def</code> y pueden recibir par\u00e1metros y devolver resultados.</p> <ul> <li> <p>Actividad 11: Saludo Personalizado. Crea una funci\u00f3n llamada <code>saludar</code> que reciba un nombre como par\u00e1metro y muestre por pantalla un saludo personalizado, como \"\u00a1Hola, [nombre]! Que tengas un gran d\u00eda.\". Llama a la funci\u00f3n con tu propio nombre.</p> </li> <li> <p>Actividad 12: Calculadora de Factorial. Crea una funci\u00f3n que calcule el factorial de un n\u00famero. El factorial de un n\u00famero n (escrito como n!) es la multiplicaci\u00f3n de todos los n\u00fameros enteros desde 1 hasta n. Por ejemplo, 5! = 1 * 2 * 3 * 4 * 5 = 120.</p> </li> </ul>"},{"location":"M1/m1f2.html#recursos","title":"Recursos","text":"<ul> <li>El Percept\u00f3n \u00a1explicado! (demo interactivo)</li> <li>Python basics - Google Colab</li> </ul>"}]}